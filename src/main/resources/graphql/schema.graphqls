scalar Long
scalar Date
scalar BigDecimal  
scalar Timestamp

enum AccountType {
    Credit
    Debit
    Undefined
}

enum TransactionState {
    Cleared
    Outstanding
    Future
    Undefined
}

enum ImageFormatType {
    Jpeg
    Png
    Undefined
}

enum ReoccurringType {
    Monthly
    Annually
    BiAnnually
    FortNightly
    Quarterly
    Onetime
    Undefined
}

enum TransactionType {
    Expense
    Income
    Transfer
    Undefined
}

enum ClaimStatus {
    Submitted
    Approved
    Denied
    Pending
    Paid
    Undefined
}

type Query {
    descriptions : [Description]
    description (descriptionName: String!) : Description
    categories : [Category]
    category(categoryName: String!) : Category
    account(accountNameOwner: String!) : Account
    accounts(accountType: AccountType) : [Account]
    transactions(accountNameOwner: String!) : [Transaction]
    transaction(guid: String!) : Transaction
    payments : [Payment]
    payment(paymentId: ID!) : Payment
    transfers : [Transfer]
    transfer(transferId: ID!) : Transfer
    parameters : [Parameter]
    parameter(parameterId: ID!) : Parameter
    validationAmounts : [ValidationAmount]
    validationAmount(validationId: ID!) : ValidationAmount
    receiptImages : [ReceiptImage]
    receiptImage(receiptImageId: ID!) : ReceiptImage
    medicalExpenses : [MedicalExpense]
    medicalExpense(medicalExpenseId: ID!) : MedicalExpense
    medicalExpensesByClaimStatus(claimStatus: ClaimStatus!) : [MedicalExpense]
    #mutation: Mutation
}

type Mutation {
    createPayment( payment: PaymentInput ) : Payment
    updatePayment( id: ID!, payment: PaymentInput ) : Payment
    deletePayment( id: ID! ) : Boolean
    createTransfer( transfer: TransferInput ) : Transfer
    updateTransfer( id: ID!, transfer: TransferInput ) : Transfer
    deleteTransfer( id: ID! ) : Boolean
    createParameter( parameter: ParameterInput ) : Parameter
    updateParameter( parameter: ParameterInput ) : Parameter
    deleteParameter( parameterId: ID! ) : Boolean
    createCategory( category: CategoryInput ) : Category
    updateCategory( category: CategoryInput, oldCategoryName: String ) : Category
    deleteCategory( categoryName: String! ) : Boolean
    createDescription( description: DescriptionInput ) : Description
    updateDescription( description: DescriptionInput, oldDescriptionName: String ) : Description
    deleteDescription( descriptionName: String! ) : Boolean
    createMedicalExpense( medicalExpense: MedicalExpenseInput ) : MedicalExpense
    updateMedicalExpense( medicalExpense: MedicalExpenseInput ) : MedicalExpense
    deleteMedicalExpense( medicalExpenseId: ID! ) : Boolean
    createValidationAmount( validationAmount: ValidationAmountInput ) : ValidationAmount
    updateValidationAmount( validationAmount: ValidationAmountInput ) : ValidationAmount
    deleteValidationAmount( validationId: ID! ) : Boolean
    createAccount( account: AccountInput ) : Account
    updateAccount( account: AccountInput, oldAccountNameOwner: String ) : Account
    deleteAccount( accountNameOwner: String! ) : Boolean
    createTransaction( transaction: TransactionInput ) : Transaction
    updateTransaction( transaction: TransactionInput ) : Transaction
    deleteTransaction( guid: String! ) : Boolean
}

# complete 7/17/2021
type Account {
    accountId: ID
    activeStatus: Boolean!
    accountNameOwner: String!
    accountType: AccountType!
    moniker: String
    outstanding: BigDecimal
    cleared: BigDecimal
    future: BigDecimal
    dateClosed: Timestamp
    validationDate: Timestamp
    dateAdded: Timestamp
    dateUpdated: Timestamp
}

# complete 7/17/2021
type Category {
    categoryId: ID
    activeStatus: Boolean!
    categoryName: String!
    categoryCount: Long
    dateAdded: Timestamp
    dateUpdated: Timestamp
}

# complete 7/17/2021
type Description {
    descriptionId: ID
    activeStatus: Boolean!
    descriptionName: String!
    descriptionCount: Long
    dateAdded: Timestamp
    dateUpdated: Timestamp
}

# complete 7/17/2021
type Transaction {
    transactionId: ID
    guid: String!
    accountId: ID
    accountType: AccountType!
    transactionType: TransactionType!
    activeStatus: Boolean!
    transactionDate: Date!
    accountNameOwner: String!
    description: String!
    category: String!
    amount: BigDecimal!
    transactionState: TransactionState!
    reoccurringType: ReoccurringType!
    notes: String!
    dueDate: Date
    receiptImageId: ID
    receiptImage: ReceiptImage
    dateAdded: Timestamp
    dateUpdated: Timestamp
}

# complete 7/17/2021
type Payment {
    paymentId: ID
    sourceAccount: String!
    destinationAccount: String!
    activeStatus: Boolean!
    transactionDate: Date!
    amount: BigDecimal!
    guidSource: String
    guidDestination: String
    dateAdded: Timestamp
    dateUpdated: Timestamp
}

input PaymentInput {
    paymentId: ID
    sourceAccount: String!
    destinationAccount: String!
    transactionDate: Date!
    amount: BigDecimal!
    guidSource: String
    guidDestination: String
    activeStatus: Boolean
}

# complete 7/17/2021
type Transfer {
    transferId: ID
    sourceAccount: String!
    destinationAccount: String!
    transactionDate: Date!
    amount: BigDecimal!
    guidSource: String
    guidDestination: String
    activeStatus: Boolean!
    dateAdded: Timestamp
    dateUpdated: Timestamp
}

input TransferInput {
    sourceAccount: String!
    destinationAccount: String!
    transactionDate: Date!
    amount: BigDecimal!
    guidSource: String
    guidDestination: String
    activeStatus: Boolean
}

input AccountInput {
    accountId: ID
    accountNameOwner: String!
    accountType: AccountType!
    activeStatus: Boolean
    moniker: String
    outstanding: BigDecimal
    cleared: BigDecimal
    future: BigDecimal
    dateClosed: Timestamp
    validationDate: Timestamp
}

input TransactionInput {
    transactionId: ID
    guid: String
    accountId: ID
    accountType: AccountType!
    transactionType: TransactionType!
    accountNameOwner: String!
    transactionDate: Date!
    description: String!
    category: String!
    amount: BigDecimal!
    transactionState: TransactionState!
    activeStatus: Boolean
    reoccurringType: ReoccurringType
    notes: String
    dueDate: Date
    receiptImageId: ID
}

input ParameterInput {
    parameterId: ID
    parameterName: String!
    parameterValue: String!
    activeStatus: Boolean
}

input CategoryInput {
    categoryId: ID
    categoryName: String!
    activeStatus: Boolean
}

input DescriptionInput {
    descriptionId: ID
    descriptionName: String!
    activeStatus: Boolean
}

input ValidationAmountInput {
    validationId: ID
    accountId: ID!
    validationDate: Timestamp!
    activeStatus: Boolean
    transactionState: TransactionState!
    amount: BigDecimal!
}

type ReceiptImage {
    receiptImageId: ID
    transactionId: ID
    activeStatus: Boolean!
    imageFormatType: ImageFormatType!
    image: String!
    thumbnail: String!
}

# complete 7/17/2021
type Parameter {
    parameterId: ID
    parameterName: String!
    parameterValue: String!
    activeStatus: Boolean!
    dateAdded: Timestamp!
    dateUpdated: Timestamp!
}

# complete 7/17/2021
type ValidationAmount {
    validationId: Long
    accountId: Long
    validationDate: Timestamp!
    activeStatus: Boolean!
    transactionState: TransactionState!
    amount: BigDecimal!
}

type MedicalExpense {
    medicalExpenseId: ID
    transactionId: ID
    providerId: ID
    familyMemberId: ID
    serviceDate: Date!
    serviceDescription: String
    procedureCode: String
    diagnosisCode: String
    billedAmount: BigDecimal!
    insuranceDiscount: BigDecimal!
    insurancePaid: BigDecimal!
    patientResponsibility: BigDecimal!
    paidDate: Date
    isOutOfNetwork: Boolean!
    claimNumber: String!
    claimStatus: ClaimStatus!
    activeStatus: Boolean!
    dateAdded: Timestamp
    dateUpdated: Timestamp
    paidAmount: BigDecimal!
}

input MedicalExpenseInput {
    medicalExpenseId: ID
    transactionId: ID
    providerId: ID
    familyMemberId: ID
    serviceDate: Date!
    serviceDescription: String
    procedureCode: String
    diagnosisCode: String
    billedAmount: BigDecimal!
    insuranceDiscount: BigDecimal!
    insurancePaid: BigDecimal!
    patientResponsibility: BigDecimal!
    paidDate: Date
    isOutOfNetwork: Boolean!
    claimNumber: String!
    claimStatus: ClaimStatus!
    activeStatus: Boolean
    paidAmount: BigDecimal!
}
