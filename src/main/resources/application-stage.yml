server:
  address: 0.0.0.0
  port: ${SERVER_PORT}
  http2:
    enabled: true
  tomcat:
    connection-timeout: 10s
  ssl:
    enabled: ${SSL_ENABLED}
    key-store: classpath:bhenning-letsencrypt.p12
    key-store-password: ${SSL_KEY_STORE_PASSWORD}
    key-store-type: PKCS12
    key-alias: bhenning
    key-password: ${SSL_KEY_PASSWORD}
    enabled-protocols: TLSv1.3,TLSv1.2
    protocol: TLS
spring:
  graphql:
    path: /graphql
  security:
    user:
      name: ${API_USERNAME}
      password: ${API_PASSWORD}
  application:
    name: ${APPNAME}
  #  profiles:
  #    active: ${SPRING_PROFILES_ACTIVE}

  # ===============================
  # = Jackson Settings
  # ===============================
  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE
    default-property-inclusion: non_null
    mapper.accept-case-insensitive-enums: true
    time-zone: America/Chicago

  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: ${DATASOURCE}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: ${DATASOURCE_DRIVER}
    hikari:
      schema: stage
  sql:
    init:
      continue-on-error: false
      enabled: on

  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  # Show or not log for each sql query
  jpa:
    show-sql: false
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: ${HIBERNATE_DDL}
  #    properties:
  #      hibernate:
  #        jdbc:
  #          time_zone: UTC

  # ===============================
  # = Flyway
  # ===============================
  flyway:
    enabled: ${FLYWAY_ENABLED}
    user: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    url: ${DATASOURCE}
    baseline-on-migrate: true
    baseline-version: 0
    schemas: stage
    locations: classpath:db/migration/stage
    validate-on-migrate: true

# ===============================
# = Custom
# ===============================
custom:
  project:
    excluded-accounts:
      - test_brian

# ===============================
# = Logging
# ===============================
logging:
  config: classpath:logback-stage.groovy

#spring.jpa.hibernate.ddl-auto: none
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#none is build from schema.sql (no Java classes)
#update only add new tables in the schema.sql (starting from Java classes)

#kebab-case '-' separated

# ===============================
# = Health and Metrics
# ===============================
management:
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles:
        method.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
        query.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
    export:
      influx:
        enabled: ${INFLUXDB_ENABLED}
        auto-create-db: true
        db: metrics_stage
        compressed: false
        uri: ${INFLUXDB_URL}
        user-name: ${INFLUXDB_ADMIN_USERNAME}
        password: ${INFLUXDB_ADMIN_PASSWORD}
  endpoints:
    web:
      exposure:
        include: "*"
debug: false
