-- V03: Create Medical Provider table (Oracle version)
-- Medical provider information for healthcare expense tracking

CREATE TABLE t_medical_provider (
    provider_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    provider_name       VARCHAR2(500) NOT NULL,
    provider_type       VARCHAR2(50) DEFAULT 'general' NOT NULL,
    specialty           VARCHAR2(200),
    npi                 VARCHAR2(10) UNIQUE, -- National Provider Identifier
    tax_id              VARCHAR2(20), -- Tax ID/EIN for business providers

    -- Address information
    address_line1       VARCHAR2(200),
    address_line2       VARCHAR2(200),
    city               VARCHAR2(100),
    state              VARCHAR2(50),
    zip_code           VARCHAR2(10),
    country            VARCHAR2(50) DEFAULT 'US',

    -- Contact information
    phone              VARCHAR2(20),
    fax                VARCHAR2(20),
    email              VARCHAR2(200),
    website            VARCHAR2(500),

    -- Provider details
    network_status     VARCHAR2(20) DEFAULT 'unknown', -- in_network, out_of_network, unknown
    billing_name       VARCHAR2(500), -- Name used for billing/claims
    notes              CLOB,

    -- Audit and status fields
    active_status      NUMBER(1) DEFAULT 1 NOT NULL,
    date_added         TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    date_updated       TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,

    -- Constraints
    CONSTRAINT ck_provider_type CHECK (provider_type IN (
        'general', 'specialist', 'hospital', 'pharmacy', 'laboratory',
        'imaging', 'urgent_care', 'emergency', 'mental_health', 'dental',
        'vision', 'physical_therapy', 'other'
    )),
    CONSTRAINT ck_network_status CHECK (network_status IN (
        'in_network', 'out_of_network', 'unknown'
    )),
    CONSTRAINT ck_provider_name_lowercase CHECK (provider_name = lower(provider_name)),
    CONSTRAINT ck_provider_name_not_empty CHECK (length(trim(provider_name)) > 0),
    CONSTRAINT ck_npi_format CHECK (npi IS NULL OR REGEXP_LIKE(npi, '^[0-9]{10}$')),
    CONSTRAINT ck_zip_code_format CHECK (zip_code IS NULL OR REGEXP_LIKE(zip_code, '^[0-9]{5}(-[0-9]{4})?$')),
    CONSTRAINT ck_phone_format CHECK (phone IS NULL OR length(phone) >= 10),
    CONSTRAINT ck_active_status_boolean CHECK (active_status IN (0, 1))
);

-- Indexes for performance
CREATE INDEX idx_medical_provider_name ON t_medical_provider(provider_name);
CREATE INDEX idx_medical_provider_type ON t_medical_provider(provider_type);
CREATE INDEX idx_medical_provider_specialty ON t_medical_provider(specialty);
CREATE INDEX idx_medical_provider_npi ON t_medical_provider(npi);
CREATE INDEX idx_medical_provider_active ON t_medical_provider(active_status, provider_name);
CREATE INDEX idx_medical_provider_network ON t_medical_provider(network_status, provider_type);
CREATE INDEX idx_medical_provider_location ON t_medical_provider(state, city);

-- Insert common medical provider types for initial data
INSERT INTO t_medical_provider (provider_name, provider_type, specialty, network_status) VALUES
('unknown_provider', 'general', NULL, 'unknown');
INSERT INTO t_medical_provider (provider_name, provider_type, specialty, network_status) VALUES
('pharmacy_generic', 'pharmacy', 'retail_pharmacy', 'unknown');
INSERT INTO t_medical_provider (provider_name, provider_type, specialty, network_status) VALUES
('urgent_care_generic', 'urgent_care', NULL, 'unknown');
INSERT INTO t_medical_provider (provider_name, provider_type, specialty, network_status) VALUES
('hospital_generic', 'hospital', NULL, 'unknown');
INSERT INTO t_medical_provider (provider_name, provider_type, specialty, network_status) VALUES
('laboratory_generic', 'laboratory', 'general_lab', 'unknown');

COMMIT;