server:
  http2:
    enable: true
  tomcat:
    connection-timeout: 10s
  port: ${SERVER_PORT}
  ssl:
    key-store: classpath:hornsup-raspi-finance-keystore.p12
    key-store-password: ${SSL_KEY_STORE_PASSWORD}
    key-store-type: pkcs12
    key-alias: hornsup
    key-password: ${SSL_KEY_PASSWORD}
    enabled: ${SSL_ENABLED}
    enabled-protocols: TLSv1.2
spring:
  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          issuer-uri: http://localhost:8443/auth/realms/finance
#          jwk-set-uri: http://localhost:8443/auth/realms/finance/protocol/openid-connect/certs
    user:
      name: ${BASIC_AUTH_USERNAME}
      password: ${BASIC_AUTH_PASSWORD}
  application:
    name: raspi-finance-endpoint
  #  profiles:
  #    active: ${SPRING_PROFILES_ACTIVE}

  # ===============================
  # = Jackson Settings
  # ===============================
  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE
    default-property-inclusion: non_null
    mapper.accept-case-insensitive-enums: true
    time-zone: America/Chicago
  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: ${DATASOURCE}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: ${DATASOURCE_DRIVER}
    hikari:
      schema: public
  sql:
    init:
      continue-on-error: false
      mode: never
  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  # Show or not log for each sql query
  jpa:
    show-sql: false
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: ${HIBERNATE_DDL}
  #    properties:
  #      hibernate:
  #        jdbc:
  #          time_zone: UTC

  # ===============================
  # = Flyway
  # ===============================
  flyway:
    enabled: ${FLYWAY_ENABLED}
    user: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    url: ${DATASOURCE}
    baseline-on-migrate: true
    baseline-version: 0
    #    schemas: prod
    locations: classpath:db/migration/prod
    validate-on-migrate: true
  # CORs
#  mvc:
#    dispatch-options-request: true
# ===============================
# = Custom
# ===============================
custom:
  project:
    jwt:
      key: "Ei,a/_-y,5ZTn7rR*0DA@NK[rFX_L:!0hG+U@{2)k/7S2jN=6UJb%vp{.X.].N}:y*cR,R1D=!B{eY_E8CzYMNFE=q_+q!?eD4*kgwU.hnWBNSB{iEm=3DJMhzL}Lh(1Py%6Yx7&QB-ueC?%ZcLuE_8=rXpZx8%Mfi[uwz2w8bT;??X%0PBMYnxFR/U+rK}A/)PycZE[)YH)!?73?rBZUq:j;2YzrgJu(dyAWE:U:ui/1n]#EZRgMpeRiHbWW+V2}gTLw*;m,MK[PH4*Vug)6e%g(*wh(-NmneR[=h2{(*{.5QhG%wjDD[bim25miKkBN[UHnyYFvYL,-#6!;4GSkw1T6EN&;3,Q0/,J+df;vf8L{%Q(%Pr+jjtp:aWxkmGj0a-x246J}+(D6NENN_iFuHKF74FQ}[/h:]Dt/}4!h,&wSX(?1L30v=jqJz%EX#$&)Ftd.SgPNGzeMUc=aZ,ty__H(,}ddkfxZdb/]Z@jeuT{D&U0F6@{en%Ej!:u3h9uP55#"
    allowed:
      origins:
        - https://hornsup:3000
        - https://localhost:3000
        - https://finance.lan
        - https://www.bhenning.com
        - https://www.brianhenning.com
        - https://vercel.bhenning.com
        - https://vercel.brianhenning.com
        - https://pages.brianhenning.com
        - https://pages.bhenning.com
        - https://amplify.bhenning.com
        - https://amplify.brianhenning.com
        - https://netlify.bhenning.com
        - https://netlify.brianhenning.com
    excel-password: ${EXCEL_PASSWORD}
    excel-input-file-path: ${EXCEL_FILES_INPUT_PATH}
    excluded-accounts:
      - test_brian
    camel-route:
      auto-start-route: true
      json-file-reader-route: "file:${JSON_FILES_INPUT_PATH}?delete=true&moveFailed=.not-processed-failed-with-errors&delay=15000"
      transaction-to-database-Route: direct:transactionToDatabaseRoute
      json-file-writer-route: direct:jsonFileWriterRoute
      saved-file-endpoint: "file:${JSON_FILES_INPUT_PATH}/.processed-successfully"
      failed-Json-file-endpoint: "file:${JSON_FILES_INPUT_PATH}/.not-processed-non-json-file"
      failed-json-parser-endpoint: "file:${JSON_FILES_INPUT_PATH}/.not-processed-json-parsing-errors"

# ===============================
# = Logging
# ===============================
# logging:
#   config: classpath:logback-prod.groovy
#  logstash:
#    enabled: true
#    url: 192.168.99.100:5000

#spring.jpa.hibernate.ddl-auto: none
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#none is build from schema.sql (no Java classes)
#update only add new tables in the schema.sql (starting from Java classes)

#kebab-case '-' separated

# ===============================
# = Health and Metrics
# ===============================

#management.metrics.export.influx:
#  bucket: metrics # Specifies the destination bucket for writes
#  org: hornsup # Specifies the destination organization for writes.
#  token: my-super-secret-auth-token # Authenticate requests with this token.
#  uri: http://finance-db.lan:8086/api/v2 # The URI for the Influx backend. (Default: http://localhost:8086/api/v2)
#  compressed: true # Whether to enable GZIP compression of metrics batches published to Influx. (Default: true)
#  enabled: true # Whether exporting of metrics to this backend is enabled. (Default: true)


management:
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles:
        method.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
        query.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
  endpoints:
    web:
      exposure:
        include: "*"
  influx:
    metrics:
      export:
        auto-create-db: true
        enabled: ${INFLUXDB_ENABLED}
        db: metrics
        compressed: false
        uri: ${INFLUXDB_URL}
        user-name: ${INFLUXDB_ADMIN_USERNAME}
        password: ${INFLUXDB_ADMIN_PASSWORD}
debug: false

