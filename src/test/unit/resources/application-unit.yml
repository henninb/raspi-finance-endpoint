server:
  port: ${SERVER_PORT}
  ssl:
    key-store: classpath:hornsup-raspi-finance-keystore.p12
    key-store-password: none
    key-store-type: pkcs12
    key-alias: hornsup-raspi-finance
    key-password: none
    enabled: false
    enabled-protocols: TLSv1.2
spring:
  application:
    name: raspi-finance-endpoint

  # ===============================
  # = Jackson Settings
  # ===============================
  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE
    default-property-inclusion: non_null
    mapper.accept-case-insensitive-enums: true
    deserialization.FAIL_ON_NULL_FOR_PRIMITIVES: false
    deserialization.FAIL_ON_UNKNOWN_PROPERTIES: false
    time-zone: America/Chicago

  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: jdbc:h2:mem:finance_db;DB_CLOSE_DELAY=-1
    username: sa
    password:
    driver-class-name: org.h2.Driver
    hikari:
      schema: unit
  sql:
    init:
      platform: h2
      continue-on-error: false
      enabled: on

  # ===============================
  # = Thymeleaf
  # ===============================
  thymeleaf:
    cache: false
  # ===============================
  # = H2
  # ===============================
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  # Show or not log for each sql query
  jpa:
    show-sql: true
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
  #    properties:
  #      hibernate:
  #        jdbc:
  #          time_zone: UTC
  flyway:
    enabled: false


# ===============================
# = Logging
# ===============================
logging:
  config: classpath:logback.xml

#  level:
#    root: DEBUG
#    finance:
#      testloglevel: DEBUG

#spring.jpa.hibernate.ddl-auto: none
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#none is build from schema.sql (no Java classes)
#update only add new tables in the schema.sql (starting from Java classes)

#kebab-case '-' separated

# ===============================
# = Health and Metrics
# ===============================
management:
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles:
        method.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
        query.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
    export:
      influx:
        enabled: false
        auto-create-db: true
        db: metrics
        compressed: false
        uri: http://hornsup:8086
        user-name: admin
        password:
  endpoints:
    web:
      exposure:
        include: "*"
debug: false

custom:
  security:
    rate-limit:
      enabled: false
