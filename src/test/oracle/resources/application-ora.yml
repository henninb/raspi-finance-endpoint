server:
  port: ${SERVER_PORT}
  ssl:
    key-store: classpath:hornsup-raspi-finance-keystore.p12
    key-store-password: none
    key-store-type: pkcs12
    key-alias: hornsup-raspi-finance
    key-password: none
    enabled: false
    enabled-protocols: TLSv1.2
spring:
  security:
    user:
      name: foo
      password: bar
  application:
    name: raspi-finance-endpoint

  # ===============================
  # = Jackson Settings
  # ===============================
  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE
    default-property-inclusion: non_null
    mapper.accept-case-insensitive-enums: true
    time-zone: America/Chicago

  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: jdbc:oracle:thin:@192.168.100.208:1521/ORCLCDB.localdomain
    username: henninb
    password: monday1
    driver-class-name: oracle.jdbc.OracleDriver
    #Platform: org.hibernate.dialect.OracleDialect
    continue-on-error: false
    # always if you want to utilize data.sql and schema.sql
    # never Do not initialize the datasource
    # embedded Only initialize an embedded datasource.
    #initialization-mode: embedded
  thymeleaf:
    cache: false

  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  # Show or not log for each sql query
  # spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
  jpa:
    #database-platform: org.hibernate.dialect
    #database-platform: org.hibernate.dialect.OracleDialect
    show-sql: true
    open-in-view: false
    generate-ddl: true
    hibernate:
      ddl-auto: update
  #    properties:
  #      hibernate:
  #        dialect: org.hibernate.dialect.OracleDialect
  #        jdbc:
  #          time_zone: UTC

  # ===============================
  # = Flyway
  # ===============================
  flyway:
    enabled: true
    user: henninb
    password: monday1
    url: jdbc:oracle:thin:@192.168.100.208:1521/ORCLCDB.localdomain
    baseline-on-migrate: true
    baseline-version: 0
    locations: classpath:db/migration/oracle
#    validate-on-migrate: true

# ===============================
# = Custom
# ===============================
custom:
  project:
    excluded-accounts:
      - test_brian
    camel-route:
      auto-start-route: true
      json-file-reader-route-id: jsonFileReaderRoute
      transaction-to-database-route-id: transactionToDatabaseRoute
      json-file-writer-route-id: jsonFileWriterRoute
      json-file-reader-route: "file:func_json_in?delete=true&moveFailed=.not-processed-failed-with-errors&delay=15000"
      transaction-to-database-Route: direct:transactionToDatabaseRoute
      json-file-writer-route: direct:jsonFileWriterRoute
      saved-file-endpoint: "file:func_json_in/.processed-successfully"
      failed-Json-file-endpoint: "file:func_json_in/.not-processed-non-json-file"
      failed-json-parser-endpoint: "file:func_json_in/.not-processed-json-parsing-errors"

# ===============================
# = Logging
# ===============================
logging:
  config: classpath:logback.groovy

#spring.jpa.hibernate.ddl-auto: none
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#none is build from schema.sql (no Java classes)
#update only add new tables in the schema.sql (starting from Java classes)

#kebab-case '-' separated

# ===============================
# = Health and Metrics
# ===============================
management:
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles:
        method.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
        query.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
    export:
      influx:
        enabled: false
        auto-create-db: true
        db: metrics
        compressed: false
        uri: http://hornsup:8086
        user-name: admin
        password:
  endpoints:
    web:
      exposure:
        include: "*"
debug: false
