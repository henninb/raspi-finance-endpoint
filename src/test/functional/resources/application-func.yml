spring:
  application:
    name: raspi-finance-endpoint
  graphql:
    path: /graphql
    graphiql:
      enabled: true
      path: /graphiql
    schema:
      printer:
        enabled: true
      locations: classpath:graphql/
      file-extensions: .graphqls,.gqls
  main:
    web-application-type: servlet

  # ===============================
  # = Jackson Settings
  # ===============================
  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE
    default-property-inclusion: non_null
    mapper.accept-case-insensitive-enums: true
    time-zone: America/Chicago

  # ===============================
  # = DATA SOURCE
  # ===============================
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        default_schema: func
        hbm2ddl:
          create_namespaces: true
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
    username: sa
    password: sa
    hikari:
      auto-commit: false
  flyway:
    enabled: true
    locations: classpath:/db/migration/func
  sql:
    init:
      mode: embedded
      schema-locations: classpath:/db/schema-func.sql
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        trace: false
        web-allow-others: false
jooq:
  version: 3.14.15
logging:
  level:
    org:
      jooq: DEBUG
custom:
    project:
        jwt:
            key: "dummy-functional-test-key-that-is-at-least-256-bits-long-for-hmac-sha256-security"
        excluded-accounts:
            - test_brian
    security:
        rate-limit:
            enabled: false

# ===============================
# = Health and Metrics
# ===============================
management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    distribution:
      percentiles:
        method.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
        query.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
    export:
      influx:
        enabled: false

# Circuit breaker and resilience patterns
resilience4j:
  circuitbreaker:
    instances:
      database:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 60000ms
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 30000ms
  retry:
    instances:
      database:
        max-attempts: 3
        wait-duration: 1000ms
        retry-exceptions:
          - java.sql.SQLException
          - org.springframework.dao.DataAccessResourceFailureException
          - org.springframework.jdbc.CannotGetJdbcConnectionException
        ignore-exceptions:
          - jakarta.validation.ValidationException
          - java.lang.IllegalArgumentException
  timelimiter:
    instances:
      database:
        timeout-duration: 30000ms
        cancel-running-future: true
