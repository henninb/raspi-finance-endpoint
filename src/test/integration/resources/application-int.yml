server:
  port: 0
  tomcat:
    connection-timeout: 30000
    keep-alive-timeout: 30000
    max-connections: 10000
    max-threads: 200
    accept-count: 100
    threads:
      min-spare: 10
    # Additional Spring Boot 4.0 compatibility settings
    remoteip:
      protocol-header: x-forwarded-proto
      remote-ip-header: x-forwarded-for
  shutdown: graceful
  netty:
    connection-timeout: 30s
    h2c-max-content-length: 0
    initial-buffer-size: 128
    max-chunk-size: 8192
    max-initial-line-length: 4096
    validate-headers: true
spring:
  graphql:
    path: /graphql
    graphiql:
      enabled: true
      path: /graphiql
  main:
    web-application-type: servlet
    allow-bean-definition-overriding: true
    banner-mode: console
  lifecycle:
    timeout-per-shutdown-phase: 30s
  task:
    execution:
      pool:
        core-size: 4
        max-size: 16
        queue-capacity: 100
        keep-alive: 10s
  web:
    resources:
      add-mappings: true
  webflux:
    multipart:
      max-in-memory-size: 1MB
  reactor:
    netty:
      pool:
        max-connections: 100
        max-idle-time: 30s
        max-life-time: 60s
  security:
    user:
      name: foo
      password: bar
  application:
    name: raspi-finance-endpoint

  # ===============================
  # = Jackson Settings
  # ===============================
  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE
    default-property-inclusion: non_null
    mapper.accept-case-insensitive-enums: true
    time-zone: America/Chicago

  # ===============================
  # = DATA SOURCE
  # ===============================
  datasource:
    url: jdbc:h2:mem:testdb;MODE=PostgreSQL;DATABASE_TO_LOWER=TRUE;DEFAULT_NULL_ORDERING=HIGH;LOCK_TIMEOUT=10000;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: password
    driver-class-name: org.h2.Driver
    hikari:
      auto-commit: false
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 10000
      idle-timeout: 30000
      max-lifetime: 60000
      pool-name: IntegrationTestHikariPool
  sql:
    init:
      continue-on-error: false
      mode: embedded
  h2:
    console:
      enabled: false

  # ===============================
  # = Thymeleaf
  # ===============================
  thymeleaf:
    cache: false

  # ===============================
  # = JPA / HIBERNATE
  # ===============================
  # Show or not log for each sql query
  jpa:
    show-sql: false
    open-in-view: false
    generate-ddl: false
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        # Query timeout for Hibernate queries (in milliseconds)
        query.timeout: 30000
        # Connection provider settings
        connection.provider_disables_autocommit: true
        # JDBC batch settings
        jdbc:
          batch_size: 50
          batch_versioned_data: true
          time_zone: UTC
          fetch_size: 50
        # Query plan cache
        query.plan_cache_max_size: 2048
        query.plan_parameter_metadata_max_size: 128
        # Second-level cache (test-optimized)
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.internal.NoCachingRegionFactory
        # Performance optimizations for tests
        order_inserts: true
        order_updates: true
        generate_statistics: false


  # ===============================
  # = Flyway
  # ===============================
  flyway:
    enabled: true
    baseline-on-migrate: true
    baseline-version: 0
    validate-on-migrate: true
    locations: classpath:/db/migration/int
    init-sql: "CREATE SCHEMA IF NOT EXISTS int;"


# ===============================
# = Custom
# ===============================
custom:
  project:
    jwt:
      key: test-jwt-key-for-integration-tests-that-is-at-least-256-bits-long-for-hmac-sha256-security
    excluded-accounts:
      - test_brian
  security:
    rate-limit:
      enabled: false

# ===============================
# = Logging
# ===============================
logging:
  level:
    root: WARN
    org.flywaydb: WARN
    org.springframework.boot.autoconfigure.flyway: WARN
    org.springframework.boot.autoconfigure: WARN
    finance: INFO

#spring.jpa.hibernate.ddl-auto: none
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#none is build from schema.sql (no Java classes)
#update only add new tables in the schema.sql (starting from Java classes)

#kebab-case '-' separated

# ===============================
# = Health and Metrics
# ===============================
management:
  endpoint:
    health:
      show-details: always
  metrics:
    distribution:
      percentiles:
        method.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
        query.timed: 0.5,0.75,0.9,0.95,0.98,0.99,0.999
    export:
      influx:
        enabled: false
        auto-create-db: true
        db: metrics
        compressed: false
        uri: http://hornsup:8086
        user-name: admin
        password:
  endpoints:
    web:
      exposure:
        include: "*"
      base-path: /actuator
  server:
    port: ${server.port}
debug: false

# Circuit breaker and resilience patterns
resilience4j:
  circuitbreaker:
    instances:
      database:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 60000ms
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 30000ms
  retry:
    instances:
      database:
        max-attempts: 3
        wait-duration: 1000ms
        retry-exceptions:
          - java.sql.SQLException
          - org.springframework.dao.DataAccessResourceFailureException
          - org.springframework.jdbc.CannotGetJdbcConnectionException
        ignore-exceptions:
          - jakarta.validation.ValidationException
          - java.lang.IllegalArgumentException
  timelimiter:
    instances:
      database:
        timeout-duration: 30000ms
        cancel-running-future: true
